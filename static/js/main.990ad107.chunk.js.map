{"version":3,"sources":["CategoryList.js","CartSummary.js","Navi.js","ProductList.js","NotFound.js","CartList.js","FormDemo1.js","FormDemo2.js","App.js","reportWebVitals.js","index.js"],"names":["CategoryList","state","categories","getCategories","fetch","then","response","json","data","setState","this","className","props","info","title","ListGroup","map","category","ListGroupItem","active","categoryName","currentCategory","onClick","changeCategory","id","Component","CartSummary","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","cart","cartItem","DropdownItem","Badge","color","removeFromCart","product","productName","quantity","divider","to","NavItem","NavLink","length","renderSummary","renderEmptyCart","Navi","useState","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","ProductList","Table","products","scope","unitPrice","quantityPerUnit","unitsInStock","Button","addToCart","size","NotFound","CartList","striped","categoryId","outline","renderCart","FormDemo1","userName","city","onChangeHandler","event","name","target","value","onSubmitHandler","preventDefault","alert","onSubmit","onChange","type","FormDemo2","email","password","description","handleChange","handleSubmit","alertify","success","Form","FormGroup","Label","for","Input","placeholder","App","getProducts","url","newCart","addedItem","find","item","push","filter","error","productInfo","Container","Row","Col","xs","exact","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.990ad107.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { ListGroup, ListGroupItem } from 'reactstrap'\r\n\r\nexport default class CategoryList extends Component {\r\n    state = {\r\n        categories: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCategories()\r\n    }\r\n\r\n    getCategories=()=> {\r\n        fetch(\"http://localhost:3000/categories\")\r\n        .then(response=>response.json())\r\n        .then(data=>this.setState({categories:data}))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"text-danger\" >{this.props.info.title}</h1>\r\n                <ListGroup className=\"mt-5\">\r\n                    {this.state.categories.map(category => (\r\n                        <ListGroupItem active={category.categoryName===this.props.currentCategory?true:false}\r\n                            onClick={() => this.props.changeCategory(category)} \r\n                            key={category.id}>\r\n                                {category.categoryName}\r\n                        </ListGroupItem>\r\n                    ))}\r\n                </ListGroup>\r\n                {/* <h3>{this.props.currentCategory}</h3> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    Badge,\r\n    NavItem,\r\n    NavLink\r\n} from 'reactstrap';\r\n\r\nexport default class CartSummary extends Component {\r\n    renderSummary(){\r\n        return(\r\n            <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                    Your Cart\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                    {this.props.cart.map(cartItem => (\r\n                        <DropdownItem key={cartItem.product.id}>\r\n                            <Badge color=\"danger\" onClick={() => this.props.removeFromCart(cartItem.product)}>\r\n                                X\r\n                            </Badge>\r\n                            {cartItem.product.productName}\r\n                            <Badge color=\"success\">\r\n                                {cartItem.quantity}\r\n                            </Badge>\r\n                        </DropdownItem>\r\n                    ))}\r\n                    <DropdownItem divider />\r\n                    <DropdownItem>\r\n                    <Link to=\"cart\">Go to cart</Link>\r\n                    </DropdownItem>\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n        )\r\n    }\r\n    renderEmptyCart(){\r\n        return(\r\n        <NavItem>\r\n            <NavLink>\r\n                Empty Cart\r\n            </NavLink>\r\n        </NavItem>\r\n        )\r\n    }\r\nrender() {\r\n    return (\r\n        <div>\r\n            {this.props.cart.length>0?this.renderSummary():this.renderEmptyCart()}\r\n        </div>\r\n    )\r\n}\r\n}\r\n","import React, { useState } from 'react';\r\nimport CartSummary from \"./CartSummary\";\r\nimport {Link} from 'react-router-dom'\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink\r\n} from 'reactstrap';\r\n\r\nconst Navi = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar color=\"light\" light expand=\"md\">\r\n                <NavbarBrand href=\"/\">\r\n                    Market App\r\n                </NavbarBrand>\r\n                <NavbarToggler onClick={toggle} />\r\n                <Collapse isOpen={isOpen} navbar>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink>\r\n                            <Link to=\"/form1/\">Form Demo 1</Link>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink>\r\n                            <Link to=\"/form2/\">Form Demo 2</Link>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <CartSummary removeFromCart={props.removeFromCart} cart={props.cart}/>\r\n                    </Nav>\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navi;\r\n","import React, { Component } from 'react'\r\nimport { Table, Button } from 'reactstrap'\r\n\r\nexport default class ProductList extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"text-center text-danger\">{this.props.info.title}-{this.props.currentCategory}</h1>\r\n                <Table className=\"mt-5\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Product Name</th>\r\n                            <th>Unit Price Name</th>\r\n                            <th>Quantity Per Unit</th> \r\n                            <th>Units In Stock</th> \r\n                            <th>Add To Cart</th> \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.products.map(product => (\r\n                                <tr key={product.id} >\r\n                                    <th scope=\"row\">{product.id}</th>\r\n                                    <td>{product.productName}</td>\r\n                                    <td>{product.unitPrice}</td>\r\n                                    <td>{product.quantityPerUnit}</td>\r\n                                    <td>{product.unitsInStock}</td>\r\n                                    <td><Button onClick={() =>this.props.addToCart(product)} color=\"success\" size=\"sm\">Add</Button></td>\r\n                                </tr>\r\n                        ))}\r\n\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Not Found\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Table,Button} from 'reactstrap'\r\n\r\nexport default class CartList extends Component {\r\n    renderCart(){\r\n        return(\r\n            <Table striped>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Category Id</th>\r\n                        <th>Product Name</th>\r\n                        <th>Unit Price</th>\r\n                        <th>Units In Stock</th>\r\n                        <th>Quantity</th>\r\n                        <th>Remove</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        this.props.cart.map(cartItem=>(\r\n                            <tr key={cartItem.product.id}>\r\n                                <td>{cartItem.product.id}</td>\r\n                                <td>{cartItem.product.categoryId}</td>\r\n                                <td>{cartItem.product.productName}</td>\r\n                                <td>{cartItem.product.unitPrice}</td>\r\n                                <td>{cartItem.product.unitsInStock}</td>\r\n                                <td>{cartItem.product.quantity}</td>\r\n                                <td>\r\n                                    <Button size=\"sm\" outline color=\"danger\" onClick={() => this.props.removeFromCart(cartItem.product)}>\r\n                                        Remove\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderCart()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class FormDemo1 extends Component {\r\n    state =  {userName:'', city:''}\r\n    onChangeHandler =(event)=>{\r\n        //this.setState({userName:event.target.value})\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n\r\n        this.setState({[name]:value})\r\n    }\r\n\r\n    onSubmitHandler = (event)=>{\r\n        event.preventDefault();\r\n        alert(`Welcome ${this.state.userName}`);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmitHandler}>\r\n                    <h3>User Name</h3>\r\n                    <input name=\"userName\" onChange={this.onChangeHandler} type=\"text\"></input>\r\n                    <h3>User Name is {this.state.userName}</h3>\r\n\r\n                    <h3>City</h3>\r\n                    <input name=\"city\" onChange={this.onChangeHandler} type=\"text\"></input>\r\n                    <h3>City is {this.state.city}</h3>\r\n\r\n                    <input type=\"submit\" value=\"Save\"></input>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport alertify from 'alertifyjs';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap'\r\n\r\nexport default class FormDemo2 extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        city: '',\r\n        description: ''\r\n    }\r\n    handleChange = event => {\r\n        let name = event.target.name\r\n        let value = event.target.value\r\n        this.setState({ [name]: value })\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        alertify.success(this.state.email + ' added to db!', 2);\r\n        alertify.success(this.state.password + ' added to db!', 2);\r\n        alertify.success(this.state.description + ' added to db!', 2);\r\n        alertify.success(this.state.city + ' added to db!', 2);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup>\r\n                        <Label for=\"email\">Email</Label>\r\n                        <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter email\" onChange={this.handleChange}></Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"password\">Password</Label>\r\n                        <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter password\" onChange={this.handleChange}></Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"description\">Description</Label>\r\n                        <Input type=\"textarea\" name=\"description\" id=\"description\" placeholder=\"Enter description\" onChange={this.handleChange}></Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='city'>City</Label>\r\n                        <Input type='select' name='city' id='city' onChange={this.handleChange}>\r\n                            <option>Select City</option>\r\n                            <option>Ankara</option>\r\n                            <option>İstanbul</option>\r\n                            <option>İzmir</option>\r\n                            <option>Antalya</option>\r\n                            <option>Isparta</option>\r\n                            <option>Samsun</option>\r\n                            <option>Çanakkale</option>\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <Button type=\"submit\" color=\"primary\" outline >Save</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport CategoryList from './CategoryList';\nimport Category from './CategoryList';\nimport Navi from './Navi';\nimport ProductList from './ProductList';\nimport { Container, Row, Col } from 'reactstrap';\nimport alertify from 'alertifyjs';\nimport { Route, Switch } from 'react-router-dom'\nimport NotFound from \"./NotFound\"\nimport CartList from \"./CartList\"\nimport FormDemo1 from './FormDemo1';\nimport FormDemo2 from './FormDemo2';\n\nexport default class App extends Component {\n  state = { currentCategory: \"\", products: [], cart: [] }\n\n  componentDidMount() {\n    this.getProducts()\n  }\n\n\n  changeCategory = category => {\n    this.setState({ currentCategory: category.categoryName })\n    this.getProducts(category.id)\n  }\n\n  getProducts = (categoryId) => {\n    let url = \"http://localhost:3000/products\"\n    if (categoryId) {\n      url += \"?categoryId=\" + categoryId\n    }\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({ products: data }))\n  }\n\n  addToCart = (product) => {\n    let newCart = this.state.cart;\n    var addedItem = newCart.find(item => item.product.id === product.id)\n    if (addedItem) {\n      addedItem.quantity += 1\n    } else {\n      newCart.push({ product: product, quantity: 1 })\n    }\n    this.setState({ cart: newCart })\n\n    alertify.success(product.productName + ' added to cart!', 2);\n  }\n  removeFromCart = (product) => {\n    let newCart = this.state.cart.filter(item => item.product.id !== product.id)\n    this.setState({ cart: newCart })\n    alertify.error(product.productName + ' remove from cart!', 2);\n  }\n\n  render() {\n    let productInfo = { title: 'Product List' }\n    let categoryInfo = { title: 'Category List' }\n    return (\n      <div>\n        <Container>\n          <Navi removeFromCart={this.removeFromCart} cart={this.state.cart} />\n          <Row className=\"mt-5\">\n            <Col xs=\"3\">\n              <CategoryList currentCategory={this.state.currentCategory} changeCategory={this.changeCategory} info={categoryInfo} />\n            </Col>\n            <Col xs=\"9\">\n              <Switch>\n                <Route exact path=\"/\" render={props => (\n                  <ProductList\n                    {...props}\n                    products={this.state.products}\n                    addToCart={this.addToCart}\n                    currentCategory={this.state.currentCategory}\n                    info={productInfo} />\n                )} />\n                <Route exact path=\"/cart\" render={props => (\n                  <CartList\n                    {...props}\n                    cart={this.state.cart}\n                    removeFromCart={this.removeFromCart} />\n                )} />\n                <Route path=\"/form1\" component={FormDemo1}/>\n                <Route path=\"/form2\" component={FormDemo2}/>\n                <Route component={NotFound} />\n              </Switch>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'alertifyjs/build/css/alertify.min.css';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}